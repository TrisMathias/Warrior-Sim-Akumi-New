-- Check if DrRayLibrary loads correctly
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()
if not DrRayLibrary then
    error("Failed to load DrRayLibrary.")
end
print("DrRayLibrary loaded successfully.")

local window = DrRayLibrary:Load("BACKROOMS AKUMI SPECIAL SCRIPT", "Default")
print("UI Window created.")

-- Check for place ID and initialize tabs
if game.PlaceId == 17856546976 then
    print("Place ID matches BACKROOMS.")

    -- Ensure DrRayLibrary functions exist
    if not DrRayLibrary.newTab then
        error("DrRayLibrary.newTab is not defined.")
    end
    print("DrRayLibrary.newTab is defined.")

    local FarmTab = DrRayLibrary.newTab("WAVE FARM", "ImageIdHere")
    local MISCTab = DrRayLibrary.newTab("EXTRA", "ImageIdHere")
    local WORLDSTab = DrRayLibrary.newTab("WORLDS TP", "ImageIdHere")

    print("Tabs created.")

    -- Ensure functions exist before calling
    if FarmTab.newToggle then
        print("FarmTab.newToggle is defined.")
        FarmTab.newToggle("AUTO DAMAGE", "AUTO ATTACK (NO ANIMATION)", false, function(toggleState)
            getgenv().SwordSimulator.AutoDamage = toggleState
            if toggleState then
                print("AutoDamage enabled.")
                AutoDamage()
            end
        end)
    else
        error("FarmTab.newToggle is not defined.")
    end

    if FarmTab.newToggle then
        print("FarmTab.newToggle is defined.")
        FarmTab.newToggle("KILL AURA", "Enemy One Hit! (Kill Doesn't Count)", false, function(toggleState)
            getgenv().SwordSimulator.KillAura = toggleState
            if toggleState then
                print("KillAura enabled.")
                KillAura()
            end
        end)
    else
        error("FarmTab.newToggle is not defined.")
    end

    -- More debug prints for MISCTab and WORLDSTab
    if MISCTab.newToggle then
        print("MISCTab.newToggle is defined.")
        MISCTab.newToggle("CLAIM GIFT", "Claims Daily Gift (BYPASS WAIT TIME)", false, function(toggleState)
            getgenv().SwordSimulator.ClaimGift = toggleState
            if toggleState then
                print("ClaimGift enabled.")
                ClaimGift()
            end
        end)
    else
        error("MISCTab.newToggle is not defined.")
    end

    if MISCTab.newToggle then
        print("MISCTab.newToggle is defined.")
        MISCTab.newToggle("GET CODES", "GET GAME CODES", false, function(toggleState)
            getgenv().SwordSimulator.GetCodes = toggleState
            if toggleState then
                print("GetCodes enabled.")
                GetCodes()
            end
        end)
    else
        error("MISCTab.newToggle is not defined.")
    end

    if MISCTab.newToggle then
        print("MISCTab.newToggle is defined.")
        MISCTab.newToggle("MAZE GEMS", "GET MAZE GEMS", false, function(toggleState)
            getgenv().SwordSimulator.MazeGem = toggleState
            if toggleState then
                print("MazeGem enabled.")
                MazeGem()
            end
        end)
    else
        error("MISCTab.newToggle is not defined.")
    end

    if MISCTab.newToggle then
        print("MISCTab.newToggle is defined.")
        MISCTab.newToggle("Raid Gems", "Buys Raid Shop Gems (Using Tokens)", false, function(toggleState)
            getgenv().SwordSimulator.RaidGem = toggleState
            if toggleState then
                print("RaidGem enabled.")
                RaidGem()
            end
        end)
    else
        error("MISCTab.newToggle is not defined.")
    end

    if WORLDSTab.newButton then
        print("WORLDSTab.newButton is defined.")
        WORLDSTab.newButton("FOREST (W1)", "TELEPORTS TO FOREST", function()
            print("Teleporting to FOREST.")
            local Teleport = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Common"):WaitForChild("Door"):WaitForChild("Teleport")
            if Teleport then
                Teleport:FireServer(1)
            else
                print("Teleport service not found.")
            end
        end)
    else
        error("WORLDSTab.newButton is not defined.")
    end

    -- More debug prints for other teleport buttons
    -- Repeat similar checks for DESERT, BEACH, SNOW, VOLCANO, CASTLE, CANDY, and GARDEN

    -- Define values
    getgenv().SwordSimulator = {
        AutoDamage = false,
        KillAura = false,
        ClaimGift = false,
        GetCodes = false,
        MazeGem = false,
        RaidGem = false,
    }
    print("SwordSimulator values initialized.")

    -- Define functions with debug prints
    function AutoDamage()
        print("AutoDamage function started.")
        while getgenv().SwordSimulator.AutoDamage do
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Weapon"):WaitForChild("TakeDamage"):FireServer()
            wait(.001)
        end
    end

    function KillAura()
        print("KillAura function started.")
        while getgenv().SwordSimulator.KillAura do
            while wait(15) do
                -- Example code: adjust to your needs
                print("Applying KillAura.")
                for i, d in pairs(game:GetService("Workspace"):GetDescendants()) do
                    if d:IsA('Humanoid') and d.Parent.Name ~= game.Players.LocalPlayer.Name then
                        d.Health = 0
                    end
                end
            end
        end
    end

    function ClaimGift()
        print("ClaimGift function started.")
        while getgenv().SwordSimulator.ClaimGift do
            -- Example code: adjust to your needs
            for i = 1, 8 do
                print("Claiming gift:", i)
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Common"):WaitForChild("Online"):WaitForChild("TryGetOnlineGift"):InvokeServer(i)
                wait(3)
            end
        end
    end

    function GetCodes()
        print("GetCodes function started.")
        while getgenv().SwordSimulator.GetCodes do
            -- Example code: adjust to your needs
            local codes = {"like400k", "welcome", "0.5mlike"}
            for _, code in ipairs(codes) do
                print("Using code:", code)
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Common"):WaitForChild("Reward"):WaitForChild("CodeReward"):FireServer(code)
                wait(3)
            end
        end
    end

    function MazeGem()
        print("MazeGem function started.")
        while getgenv().SwordSimulator.MazeGem do
            print("Collecting MazeGem.")
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("BackRoom"):WaitForChild("CollectChest"):FireServer()
            wait(2)
        end
    end

    function RaidGem()
        print("RaidGem function started.")
        while getgenv().SwordSimulator.RaidGem do
            print("Buying RaidGem.")
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Common"):WaitForChild("DailyShop"):WaitForChild("BuyItem"):FireServer(2)
            wait(0.5)
        end
    end

end

-- Handle other place IDs similarly with error checking
if game.PlaceId == 16436007861 then
    print("Place ID matches FOREST.")

    local FarmTab = DrRayLibrary.newTab("WAVE FARM", "ImageIdHere")
    local XPTab = DrRayLibrary.newTab("XP FARM", "ImageIdHere")
    local MISCTab = DrRayLibrary.newTab("EXTRA", "ImageIdHere")
    local WORLDSTab = DrRayLibrary.newTab("WORLDS TP", "ImageIdHere")

    print("Tabs created for FOREST.")

    -- Ensure functions exist before calling
    if FarmTab.newToggle then
        print("FarmTab.newToggle is defined.")
        FarmTab.newToggle("AUTO DAMAGE", "AUTO ATTACK (NO ANIMATION)", false, function(toggleState)
            getgenv().SwordSimulator.AutoDamage = toggleState
            if toggleState then
                print("AutoDamage enabled.")
                AutoDamage()
            end
        end)
    else
        error("FarmTab.newToggle is not defined.")
    end

    if FarmTab.newToggle then
        print("FarmTab.newToggle is defined.")
        FarmTab.newToggle("KILL AURA", "Enemy One Hit! (Kill Doesn't Count)", false, function(toggleState)
            getgenv().SwordSimulator.KillAura = toggleState
            if toggleState then
                print("KillAura enabled.")
                KillAura()
            end
        end)
    else
        error("FarmTab.newToggle is not defined.")
    end

    -- More debug prints for XPTab and MISCTab
    -- Repeat similar checks and print statements as above

end
